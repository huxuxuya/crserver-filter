lua_shared_dict crs_keys 10m;

server {

    listen 80;
    
    # адрес прокси
    server_name 127.0.0.1;

    server_tokens off;

    location / {

        # адрес хранилища
        proxy_pass http://host.docker.internal:80;

        proxy_read_timeout 600;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # значения этих параметров ОБЯЗАТЕЛЬНО должны быть одинаковыми
        # https://github.com/openresty/lua-nginx-module#lua_need_request_body
        client_body_buffer_size 2048m;
        client_max_body_size 2048m;


        rewrite_by_lua_block {

            ngx.req.read_body()

			ngx.log(ngx.ERR, ngx.var.request_body)
			
            local req = ngx.var.request_body
            if req == nil then
                return
            end

            local crs_keys = ngx.shared.crs_keys

            local crsName
            local crsNamePattern = [[alias="(%a+)"]]
            if req:match([[DevDepot_commitObjects]]) ~= nil then
                crsName = req:match(crsNamePattern) -- имя хранилища
            else
                crsName = nil
            end

            local currentVersion
            local versionPattern = [[<crs:code value="(.*)"/>]]
            if req:match([[DevDepot_commitObjects]]) ~= nil then
                currentVersion = req:match(versionPattern) -- версия хранилища
            else
                currentVersion = nil
            end

            local previousVersion = crs_keys:get(crsName)
            
            if currentVersion ~= nil and crsName ~= nil and currentVersion ~= previousVersion then
                crs_keys:set(crsName, currentVersion)
            end

            local commentPattern = [[<crs:comment>(.*)</crs:comment>]]

            local message
            if req:match([[DevDepot_commitObjects]]) ~= nil then
                message = req:match(commentPattern) -- комментарий хранилища
            elseif req:match([[DevDepot_changeVersion]]) ~= nil then
                local newVersion = req:match([[<crs:newVersion>(.*)</crs:newVersion>]])
                if newVersion == nil then
                    return
                end
                message = newVersion:match(commentPattern)
            else
                return
            end

            -- проверка на пустой комментарий
            if message == nil then
                ngx.status = ngx.HTTP_BAD_REQUEST
                ngx.header.content_type = 'text/plain; charset=utf-8'
                ngx.say("ОТСУТСТВУЕТ КОММЕНТАРИЙ")
                ngx.exit(ngx.HTTP_BAD_REQUEST)
            end

            -- вот здесь можно написать свои проверки
            local five_digits = message:match([[^#%d%d%d%d%d]])
            local no_task = message:match([[^#нетзадачи]])
            local double_n = message:match("\n\n")
            if (five_digits ~= nil or no_task ~= nil) and double_n ~= nil then
                return
            else
                ngx.status = ngx.HTTP_BAD_REQUEST
                ngx.header.content_type = 'text/plain; charset=utf-8'
                ngx.say("Помещение в хранилище отклонено")
                --ngx.say("НЕВЕРНЫЙ ФОРМАТ КОММЕНТАРИЯ")
                --ngx.say("комментарий должен:")
                --ngx.say("- начинаться на #12345 (где 12345 - номер задачи) или на #нетзадачи")
                --ngx.say("- содержать пустую строку, отделяющую заголовок комментария от тела")
                -- ngx.say(ngx.var.request_body)
                --ngx.say(versionPattern)
                --ngx.say(currentVersion)
                --ngx.say(crsName)
                --ngx.say(crs_keys:get(crsName))
                if currentVersion == nil and crsName == nil then
                    ngx.say("Не удалось узнать версию")
                elseif currentVersion ~= previousVersion then
                    ngx.say("Версию поднял, молодец! Была: " .. previousVersion .. "Стала: " .. currentVersion)
                else
                    ngx.say("Подними номер версии! Последняя зарегистрированая: " .. previousVersion)
                end
                ngx.exit(ngx.HTTP_BAD_REQUEST)
            end

        }
    }
}
